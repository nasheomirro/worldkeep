$breakpoints: (
	sm: 480px,
	md: 768px,
	lg: 1024px,
	xl: 1280px
);

$colors: (
	'purple': (
		50: #F5ECFD,
		100: #EAD9FC,
		200: #D5B4F9,
		300: #C08EF5,
		400: #AB69F2,
		500: #9643EF,
		600: #7713E2,
		700: #590EA9,
		800: #3B0A71,
		900: #1E0538,
		950: #0F021C
	),
	'white': (
		50: #FDFDFD,
		100: #F0F0F0,
		200: #D6D6D6,
		300: #BDBDBD,
		400: #A3A3A3,
		500: #8C8C8C,
		600: #737373,
		700: #595959,
		800: #404040,
		900: #262626,
		950: #1A1A1A
	)
);

// returns the color on that key regardless of theme
@function theme($color, $key: null) {
	@if $key {
		@return var(--#{$color}-#{$key});
	} @else {
		@return var(--#{$color});
	}
}

// tokens change color depending on dark or light mode
@function token($color, $key: null) {
	@if $key {
		@return var(--#{$color}-#{$key}-token);
	} @else {
		@return var(--#{$color}-token);
	}
}

@mixin initialize() {
	:root {
		@each $key, $color in $colors {
			@if type-of($color) == 'map' {
				@each $color-key, $color-value in $color {
					--#{$key}-#{$color-key}: #{$color-value};
					--#{$key}-#{$color-key}-token: #{$color-value};
				}
			} @else {
				--#{$key}: #{$color};
				--#{$key}-token: #{$color};
			}
	
			body.dark {
				@each $key, $color in $colors {
					@if type-of($color) == 'map' {
						@each $color-key, $color-value in $color {
							--#{$key}-#{$color-key}-token: #{map-get($color, 1000 - $color-key)};
						}
					}
				}
			}
		}
	}
}